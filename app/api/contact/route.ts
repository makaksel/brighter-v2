import { NextResponse } from 'next/server';
import { telegramBotId, telegramChatId } from '@/src/data';

export async function POST(request: Request) {
  const requestData = await request.formData();
  const formData = Object.fromEntries(requestData);
/*  let uploadedFileLink = null;

  const file = requestData.get('file');
  if (file) {
    //@ts-ignore
    const buffer = Buffer.from(await file.arrayBuffer());
    //@ts-ignore
    const filename = file.name.replaceAll(' ', '_');

    await fs.writeFile(
      path.join(process.cwd(), '/public/assets/' + filename),
      buffer,
    );

    uploadedFileLink = `https://www.poyarche.ru/${filename}`;
  }*/

  // ${uploadedFileLink ? `–§–∞–π–ª: ${uploadedFileLink};` : ''}

  const message = `*‚ö†Ô∏è –ù–æ–≤–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ*

üë§ –∏–º—è: ${formData.name};
${formData?.contact ? `üìû –ø–æ—á—Ç–∞ –∏–ª–∏ –∫–æ–Ω—Ç–∞–∫—Ç –≤ –ª—é–±–æ–º –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–µ: ${formData.contact};` : ''}
${formData?.phone ? `üìû —Ç–µ–ª–µ—Ñ–æ–Ω: ${formData.phone};` : ''}
${formData?.telegram ? `üì¨ telegram: ${formData.telegram};` : ''}
${formData?.company ? `üì¨–Ω –∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏: ${formData.company};` : ''}

${formData?.services ? `–∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç: ${formData.services};` : ''}
`;

  const response = await fetch(`https://api.telegram.org/bot${telegramBotId}/sendMessage`, {
    method: 'POST',
    mode: 'cors',
    cache: 'no-cache',
    credentials: 'same-origin',
    headers: {
      'Content-Type': 'application/json',
    },
    redirect: 'follow',
    referrerPolicy: 'no-referrer',
    body: JSON.stringify({
      chat_id: telegramChatId,
      text: message,
      parse_mode: 'Markdown',
    }),
  });


  const responseData = await response.json();

  return NextResponse.json(responseData);
}
